{"remainingRequest":"/Users/jfa/Desktop/intern-camille/node_modules/babel-loader/lib/index.js!/Users/jfa/Desktop/intern-camille/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/jfa/Desktop/intern-camille/src/store/modules/footer.js","dependencies":[{"path":"/Users/jfa/Desktop/intern-camille/src/store/modules/footer.js","mtime":1558528086829},{"path":"/Users/jfa/Desktop/intern-camille/node_modules/cache-loader/dist/cjs.js","mtime":1556006305133},{"path":"/Users/jfa/Desktop/intern-camille/node_modules/babel-loader/lib/index.js","mtime":1556006302627},{"path":"/Users/jfa/Desktop/intern-camille/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1556006304591}],"contextDependencies":[],"result":["import { cloneDeep } from 'lodash';\nvar state = {\n  links: {\n    items: []\n  },\n  contact: {},\n  copyright: {}\n};\nvar getters = {\n  linksItems: function linksItems(state) {\n    return state.links.items;\n  },\n  contact: function contact(state) {\n    return state.contact;\n  },\n  copyright: function copyright(state) {\n    return state.copyright;\n  }\n};\nvar mutations = {\n  updateLinks: function updateLinks(state, object) {\n    state.links = cloneDeep(object);\n  },\n  updateContact: function updateContact(state, object) {\n    state.contact = cloneDeep(object);\n  },\n  updateCopyright: function updateCopyright(state, object) {\n    state.copyright = cloneDeep(object);\n  }\n};\nvar actions = {\n  updateFooter: function updateFooter(_ref, payload) {\n    var commit = _ref.commit;\n    commit('updateLinks', payload && payload.links ? payload.links : {\n      items: []\n    });\n    commit('updateContact', payload && payload.contact ? payload.contact : {\n      contact: {}\n    });\n    commit('updateCopyright', payload && payload.copyright ? payload.copyright : {\n      copyright: {}\n    });\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions,\n  namespaced: true\n};",{"version":3,"sources":["/Users/jfa/Desktop/intern-camille/src/store/modules/footer.js"],"names":["cloneDeep","state","links","items","contact","copyright","getters","linksItems","mutations","updateLinks","object","updateContact","updateCopyright","actions","updateFooter","payload","commit","namespaced"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GADK;AAIZC,EAAAA,OAAO,EAAE,EAJG;AAKZC,EAAAA,SAAS,EAAE;AALC,CAAd;AAQA,IAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,oBAAAN,KAAK;AAAA,WAAIA,KAAK,CAACC,KAAN,CAAYC,KAAhB;AAAA,GADH;AAEdC,EAAAA,OAAO,EAAE,iBAAAH,KAAK;AAAA,WAAIA,KAAK,CAACG,OAAV;AAAA,GAFA;AAGdC,EAAAA,SAAS,EAAE,mBAAAJ,KAAK;AAAA,WAAIA,KAAK,CAACI,SAAV;AAAA;AAHF,CAAhB;AAMA,IAAMG,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,qBAACR,KAAD,EAAQS,MAAR,EAAmB;AAC9BT,IAAAA,KAAK,CAACC,KAAN,GAAcF,SAAS,CAACU,MAAD,CAAvB;AACD,GAHe;AAIhBC,EAAAA,aAAa,EAAE,uBAACV,KAAD,EAAQS,MAAR,EAAmB;AAChCT,IAAAA,KAAK,CAACG,OAAN,GAAgBJ,SAAS,CAACU,MAAD,CAAzB;AACD,GANe;AAOhBE,EAAAA,eAAe,EAAE,yBAACX,KAAD,EAAQS,MAAR,EAAmB;AAClCT,IAAAA,KAAK,CAACI,SAAN,GAAkBL,SAAS,CAACU,MAAD,CAA3B;AACD;AATe,CAAlB;AAYA,IAAMG,OAAO,GAAG;AACdC,EAAAA,YAAY,EAAE,4BAAaC,OAAb,EAAyB;AAAA,QAAtBC,MAAsB,QAAtBA,MAAsB;AACrCA,IAAAA,MAAM,CAAC,aAAD,EAAgBD,OAAO,IAAIA,OAAO,CAACb,KAAnB,GAA2Ba,OAAO,CAACb,KAAnC,GAA2C;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA3D,CAAN;AACAa,IAAAA,MAAM,CAAC,eAAD,EAAkBD,OAAO,IAAIA,OAAO,CAACX,OAAnB,GAA6BW,OAAO,CAACX,OAArC,GAA+C;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAjE,CAAN;AACAY,IAAAA,MAAM,CAAC,iBAAD,EAAoBD,OAAO,IAAIA,OAAO,CAACV,SAAnB,GAA+BU,OAAO,CAACV,SAAvC,GAAmD;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAAvE,CAAN;AACD;AALa,CAAhB;AAQA,eAAe;AACbJ,EAAAA,KAAK,EAALA,KADa;AAEbK,EAAAA,OAAO,EAAPA,OAFa;AAGbE,EAAAA,SAAS,EAATA,SAHa;AAIbK,EAAAA,OAAO,EAAPA,OAJa;AAKbI,EAAAA,UAAU,EAAE;AALC,CAAf","sourcesContent":["import { cloneDeep } from 'lodash'\n\nconst state = {\n  links: {\n    items: []\n  },\n  contact: {},\n  copyright: {}\n}\n\nconst getters = {\n  linksItems: state => state.links.items,\n  contact: state => state.contact,\n  copyright: state => state.copyright\n}\n\nconst mutations = {\n  updateLinks: (state, object) => {\n    state.links = cloneDeep(object)\n  },\n  updateContact: (state, object) => {\n    state.contact = cloneDeep(object)\n  },\n  updateCopyright: (state, object) => {\n    state.copyright = cloneDeep(object)\n  }\n}\n\nconst actions = {\n  updateFooter: ({ commit }, payload) => {\n    commit('updateLinks', payload && payload.links ? payload.links : { items: [] })\n    commit('updateContact', payload && payload.contact ? payload.contact : { contact: {} })\n    commit('updateCopyright', payload && payload.copyright ? payload.copyright : { copyright: {} })\n  }\n}\n\nexport default {\n  state,\n  getters,\n  mutations,\n  actions,\n  namespaced: true\n}\n"]}]}